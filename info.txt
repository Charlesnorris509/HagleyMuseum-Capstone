Table: Customers
Endpoint: /registrants (from alt-evtmg.json)
Operation: POST to create a new registrant, which can be used to populate the Customers table.
Fields: constituent_id, Fname, Lname, Phone, Email, Address1, Address2, City, State, Zip, Altru_id
Table: Events
Endpoint: /events (from alt-evtmg.json)
Operation: POST to create a new event, which can be used to populate the Events table.
Fields: name, description, start_date, start_time, end_date, end_time, capacity, main_event_id, event_location_id, event_location_contact_id, sites, site_required, event_category, quick_compare_event_id, event_location_room, auction, event_auction_has_items, designations_on_fees, event_has_registrants
Table: Employees
Endpoint: /employees (not provided in the given files)
Operation: No direct endpoint provided in the given files. You might need to use a different API or manually insert data.
Fields: Fname, Lname, Phone, Email
Table: Departments
Endpoint: /departments (not provided in the given files)
Operation: No direct endpoint provided in the given files. You might need to use a different API or manually insert data.
Fields: E_id, Name
Table: Wristbands
Endpoint: /wristbands (not provided in the given files)
Operation: No direct endpoint provided in the given files. You might need to use a different API or manually insert data.
Fields: Event_ID, Issued
Table: ParkingPasses
Endpoint: /parkingpasses (not provided in the given files)
Operation: No direct endpoint provided in the given files. You might need to use a different API or manually insert data.
Fields: Event_ID, Issued
Table: PassTypes
Endpoint: /parkingpasses/{PP_id} (from alt-evtmg.json)
Operation: POST to create a new parking pass type, which can be used to populate the PassTypes table.
Fields: PP_id, PassType, Cost
Summary of Required Endpoints:
Customers: /registrants (POST)
Events: /events (POST)
Employees: No direct endpoint provided.
Departments: No direct endpoint provided.
Wristbands: No direct endpoint provided.
ParkingPasses: No direct endpoint provided.
PassTypes: /parkingpasses/{PP_id} (POST)

Tables and Corresponding API Endpoints
Customers Table
Fields: C_id, Member_id, Fname, Lname, Phone, Email, Address1, Address2, City, State, Zip, Altru_id
API Endpoint: /adhocqueries/{query_id}
Description: This endpoint can be used to fetch ad-hoc query results, which might include customer details.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name, which can then be used with the /adhocqueries/{query_id} endpoint to fetch the actual data.
Events Table
Fields: Event_ID, C_id, Name, EventDate
API Endpoint: /adhocqueries/{query_id}
Description: Similar to the Customers table, this endpoint can be used to fetch event details if the appropriate query ID is known.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name related to events.
Employees Table
Fields: E_id, Fname, Lname, Phone, Email
API Endpoint: /adhocqueries/{query_id}
Description: This endpoint can be used to fetch employee details if the appropriate query ID is known.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name related to employees.
Departments Table
Fields: D_id, E_id, Name
API Endpoint: /adhocqueries/{query_id}
Description: This endpoint can be used to fetch department details if the appropriate query ID is known.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name related to departments.
Wristbands Table
Fields: W_id, Event_ID, Issued
API Endpoint: /adhocqueries/{query_id}
Description: This endpoint can be used to fetch wristband issuance details if the appropriate query ID is known.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name related to wristbands.
ParkingPasses Table
Fields: PP_id, Event_ID, Issued
API Endpoint: /adhocqueries/{query_id}
Description: This endpoint can be used to fetch parking pass issuance details if the appropriate query ID is known.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name related to parking passes.
PassTypes Table
Fields: PT_id, PP_id, PassType, Cost
API Endpoint: /adhocqueries/{query_id}
Description: This endpoint can be used to fetch pass type details if the appropriate query ID is known.
API Endpoint: /adhocqueries/id/{query_name}
Description: This endpoint can be used to get the query ID for a specific query name related to pass types.
Steps to Populate the Database
Identify Query Names: Determine the query names that correspond to the data needed for each table.
Get Query IDs: Use /adhocqueries/id/{query_name} to get the query IDs for these names.
Fetch Data: Use /adhocqueries/{query_id} with the obtained query IDs to fetch the actual data.
Insert Data: Insert the fetched data into the respective tables in your database.





